---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: qsd-controller
  namespace: csi-qsd
spec:
  serviceName: "qsd"
  selector:
    matchLabels:
      app: qsd-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: qsd-controller
        role: qsd-csi
    spec:
      serviceAccount: qsd-controller-sa
      priorityClassName: system-cluster-critical
      serviceAccount: qsd-controller-sa
      containers:
      - name: csi-provisioner
        image: quay.io/k8scsi/csi-provisioner:v2.0.4
        args:
          - "--csi-address=$(ADDRESS)"
          - "--default-fstype=ext4"
          - "--v=5"
        env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: controller
        image: qsd/driver
        command: "/usr/bin/driver"
        args :
        - "-endpoint=$(CSI_ENDPOINT)"
        - "-port=$(QSD_PORT)"
        imagePullPolicy: IfNotPresent
        env:
        - name: QSD_PORT
          value: "4444"
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      volumes:
        - name: socket-dir
          emptyDir: {}
---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: qsd-controller-sa
  namespace: csi-qsd
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: qsd-provisioner-binding
subjects:
  - kind: ServiceAccount
    name: qsd-controller-sa
    namespace: csi-qsd
roleRef:
  kind: ClusterRole
  name: qsd-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: qsd-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csinodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]
---
